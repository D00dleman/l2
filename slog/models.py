from django.db import models
from users.models import DoctorProfile


class Log(models.Model):
    TYPES = (
        (0, 'Другое'),

        (1, 'Справочник: добавлена пробирка'),  #
        (2, 'Справочник: изменена пробирка'),  #
        (3, 'Справочник: добавлен анализ'),  #
        (4, 'Справочник: изменен анализ'),  #
        (20, 'Справочник: добавлено отношение пробирки к фракции'),  #
        (19, 'Справочник: скрытие/показ анализа'),  #
        (5, 'Справочник: добавлена группа направления'),  #
        (6, 'Справочник: изменена группа направления'),  #

        (7, 'Направления: создано направление'),  # -
        (21, 'Направления: созданы направления'),  #

        (8, 'Взятие материала: открыто направление'),  # -
        (9, 'Взятие материала: пробирка взята'),  #
        (10, 'Взятие материала: напечатан акт приема-передачи'),  #

        (11, 'Прием материала: материал принят'),  #
        (12, 'Прием материала: материал не принят'),  #
        (25, 'Прием материала: печать журнала приема'),  #

        (13, 'Ввод результатов: результат сохранен'),  #
        (14, 'Ввод результатов: результат подтвержден'),  #
        (15, 'Ввод результатов: результаты для направления напечатаны'),  #
        (24, 'Ввод результатов: подтверждение сброшено'),  #
        (26, 'Ввод результатов: присвоение УЕТов'),  #
        (28, 'Ввод результатов: печать журнала-таблицы'),  #

        (16, 'Администрирование: создан пользователь'),  #
        (17, 'Администрирование: создано подразделение'),  #

        (18, 'Пользователи: вход пользователя'),  #

        (27, 'Поиск: поиск'),  #

        (22, 'API: результат сохранен'),  #
        (23, 'API: пробирка не найдена'),  #

        (100, 'Статистика: statistic_xls'),  #

        (998, 'Подозрительное действие: печать результатов другого врача и/или отделения и/или лаборатории'),  #
        (999, 'Подозрительное действие: печать результатов другого отделения'),  #
    )
    key = models.CharField(max_length=2047)
    type = models.IntegerField(choices=TYPES)
    body = models.TextField()
    user = models.ForeignKey(DoctorProfile)
    time = models.DateTimeField(auto_now=True)

    def get_client_ip(request):
        x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')
        if x_forwarded_for:
            ip = x_forwarded_for.split(',')[0]
        else:
            ip = request.META.get('REMOTE_ADDR')
        return ip
